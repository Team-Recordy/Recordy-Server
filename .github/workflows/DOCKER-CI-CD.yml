name: DOCKER-CI-CD
on:
  push:
    branches: [ "develop" ]

jobs:
  ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: .

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: application.yml 생성
        run: |
          mkdir -p ./src/main/resources && cd $_
          touch ./application.yml
          echo "${{ secrets.YML }}" > ./application.yml
          cat ./application.yml
        working-directory: ${{ env.working-directory }}

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        working-directory: ${{ env.working-directory }}
        shell: bash

      - name: docker 로그인
        uses: docker/setup-buildx-action@v2.9.1

      - name: login docker hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        run: |
          docker build --platform linux/amd64 -t recordy/recordy .
          docker push recordy/recordy
        working-directory: ${{ env.working-directory }}

  cd:
    needs: ci
    runs-on: ubuntu-22.04

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: ec2 서버에 deploy.sh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          source: ./scripts/deploy.sh
          target: /home/ubuntu/

      - name: ec2 서버에 docker-compose.yml 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          source: ./docker-compose.yml
          target: /home/ubuntu/

      - name: docker image 풀 및 deploy.sh 통해 블루-그린 배포 진행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_LOGIN_USERNAME }}/recordy
            sudo chmod 777 /home/ubuntu/scripts/deploy.sh
            /home/ubuntu/scripts/deploy.sh
            docker image prune -f